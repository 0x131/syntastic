#!/usr/bin/env node

// Require dependencies.
var path = require('path');
var fs = require('fs');
var optimist = require ('optimist');

// Require our library.
var thisdir = path.dirname(fs.realpathSync(__filename));
var coffeelint = require(path.join(thisdir, '../lib', 'coffeelint'));


// Print a report on the given errors.
var report = function (errors) {
    if (errors.length == 0) {
        console.log("Lint free!");
        return 0;
    }
    console.warn('Lint Errors:');
    for (var i=0; i<errors.length; i++) {
        var error = errors[i];
        var fields = [
            "Line #" + error.line,
            error.reason,
            error.evidence
        ];
        console.warn(fields.join(" | "));
    }
    return errors.length;
};


// Lint the given source files with the given configuration. Return 0
// on success, false otherwise.
var lint = function (relativePaths, configPath) {

    var paths = [];
    for (var i=0; i < relativePaths.length; i++) {
        paths.push(fs.realpathSync(relativePaths[i]));
    }

    var path = paths[0];
    var source = fs.readFileSync(path).toString();
    var errors = coffeelint.lint(source);

    return report(errors);
};


// Declare command line options.
var optimist = require('optimist')
    .usage('Usage: coffeelint [options] source [...]')
    .alias('f', 'file')
    .alias('h', 'help')
    .alias('v', 'version')
    .describe('f', 'Specify a custom configuration file.')
    .describe('h', 'Print help information.')
    .describe('v', 'Print current version number.');


if (optimist.argv.v) {
    console.log(coffeelint.VERSION);
    process.exit(0);
} else if (optimist.argv.h) {
    optimist.showHelp();
    process.exit(0);
} else if (optimist.argv._.length < 1) {
    optimist.showHelp();
    process.exit(1);
} else {
    var paths = optimist.argv._;
    var configPath = optimist.argv.f;
    var returnCode = lint(paths, configPath);
    process.exit(returnCode);
}
