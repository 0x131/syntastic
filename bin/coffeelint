#!/usr/bin/env node

var path = require('path');
var fs  = require('fs');
var lib  = path.join(path.dirname(fs.realpathSync(__filename)), '../lib');
var optimist = require('optimist');
var coffeelint = require(lib + '/coffeelint');


var optimist = require('optimist')
    .usage('Usage: coffeelint [options] source [...]')
    .alias('f', 'file')
    .alias('h', 'help')
    .alias('v', 'version')
    .describe('f', 'Specify a custom configuration file.')
    .describe('h', 'Print help information.')
    .describe('v', 'Print current version number.');


var lintFiles = function (relativePaths, configPath) {
    var paths = [];
    for (var i=0; i < relativePaths.length; i++) {
        paths.push(fs.realpathSync(relativePaths[i]));
    }
    var path = paths[0]; // HACK for now
    var source = fs.readFileSync(path).toString();
    var errors = coffeelint.lint(source);
    console.log(JSON.stringify(errors, null, 4));
    if (errors.length > 0) {
        return 1;
    } else {
        console.log('Lint free!');
        return 0;
    }
};

if (optimist.argv.v) {
    console.log(coffeelint.VERSION);
    process.exit(0);
} else if (optimist.argv.h) {
    optimist.showHelp();
    process.exit(0);
} else if (optimist.argv._.length < 1) {
    optimist.showHelp();
    process.exit(1);
} else {
    var paths = optimist.argv._;
    var configPath = optimist.argv.f;
    process.exit(lintFiles(paths, configPath));
}
